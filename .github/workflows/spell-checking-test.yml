name: Fail Workflow on Error Annotations

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run your build or tests
        id: run_tests
        run: |
          # Example of generating error annotations
          echo "::error file=example.txt,line=1::An error occurred in the build"
          echo "::warning file=example.txt,line=2::This is a warning"
          # Simulate a test or build failure (exit 0)
          exit 0  # Change this based on your script

      - name: Check for error annotations in logs
        id: check_annotations
        uses: actions/github-script@v6
        with:
          script: |
            const logs = await github.actions.listJobsForWorkflowRun({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.runId
            });

            const job = logs.data.jobs.find(j => j.name === 'build');
            const jobLogs = await github.actions.downloadJobLogs({
              owner: context.repo.owner,
              repo: context.repo.repo,
              job_id: job.id
            });

            const errorAnnotations = jobLogs.data.some(log => log.includes('::error::'));

            if (errorAnnotations) {
              core.setFailed("Error annotations found in logs!");
            } else {
              console.log("No error annotations found.");
            }

# name: Spell Checker 2

# on: [pull_request]

# jobs:
#   spell_checking:
#     name: LanguageTool
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Review dog languagetool
#         id: "review"
#         uses: reviewdog/action-languagetool@v1
#         with:
#           github_token: ${{ secrets.GITHUB_TOKEN }}
#           # Change reviewdog reporter if you need [github-pr-check,github-check,github-pr-review].
#           reporter: "github-pr-check"
#           # Change reporter level if you need.
#           level: "error"
#           patterns: "**/*.md **/*.txt **/*.mdx"
#           #enabled_categories: 'STYLE,PLAIN_ENGLISH,WHITESPACE_RULE,EN_QUOTES,DASH_RULE,WORD_CONTAINS_UNDERSCORE,UPPERCASE_SENTENCE_START,ARROWS,COMMA_PARENTHESIS_WHITESPACE,UNLIKELY_OPENING_PUNCTUATION,SENTENCE_WHITESPACE,EN_UNPAIRED_BRACKETS,PHRASE_REPETITION,PUNCTUATION_PARAGRAPH_END'
#           disabled_categories: ""
#           disabled_rules: ""

#       - name: Check for error annotations
#         id: check_annotations
#         run: |
#           # Check for any `::error` annotations in the logs
#           if grep -q '::error' $GITHUB_ENV; then
#             echo "Error annotations found!"
#             exit 1
#           else
#             echo "No error annotations found."
#           fi

#       - name: Continue with other steps
#         run: echo "No errors detected in the previous step."
